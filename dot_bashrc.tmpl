#
# ~/.bashrc
#

# If not running interactively, don't do anything
[[ $- != *i* ]] && return

alias ls='ls --color=auto'
alias ll='ls -lah'
alias grep='grep --color=auto'

#PS1='[\u@\h \W]\$ '


HISTSIZE=2000
HISTFILESIZE=2000


# SSH-AGENT
if ! pgrep -u "$USER" ssh-agent > /dev/null; then
    ssh-agent > "$XDG_RUNTIME_DIR/ssh-agent.env"
fi
if [[ ! -f "$SSH_AUTH_SOCK" ]]; then
    source "$XDG_RUNTIME_DIR/ssh-agent.env" >/dev/null
fi


# git branch info if present
parse_git_branch() {
    git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/'
}

color_prompt=yes
if [ "$color_prompt" = yes ]; then
   PS1='\[\033[01;32m\]\u\[\033[00m\]:\[\033[01;34m\]\W\[\033[33m\]$(parse_git_branch)\[\033[00m\]\$ '
else
   PS1='\u@\h:\w$(parse_git_branch)\$ '
fi

if [ -f ~/.git-completion.bash ]; then
   source ~/.git-completion.bash
fi

eval "$(zoxide init bash --cmd j)"

if [ -f ~/.bash-aliases ]; then
. ~/.bash-aliases
fi

micmute_off() {
  echo 0 | sudo tee /sys/class/leds/platform\:\:micmute/brightness  
}

eval "$(thefuck --alias)"
eval "$(fzf --bash)"

export EDITOR=nvim
export TERM=xterm

# pyenv
export PATH="$HOME/.pyenv/bin:$PATH"
# eval "$(pyenv init -)"
# eval "$(pyenv virtualenv-init -)"

pyenv() {
  eval "$(command pyenv init -)"
  eval "$(pyenv virtualenv-init -)"

  pyenv "$@"
}

